sourcesafe.light 
致力于为游戏编辑器，甚至是游戏本身，提供源代码、资源的管理。


2014-08-17 开坑

我们开发时对资源的管理工具非常多 vss cvs svn git，目前git是非常流行的工具，本项目也将托管在github上。
但这些工具都有一个麻烦，cvs svn git 协议都比较复杂，虽然都可基于http实现，客户端想要与之通讯，所需的工作都是比较大的。
我曾尝试过直接编写一个svn的客户端，游戏内使用。很多地方，要用到 get post之外的方法，只能从httprequest开始组装
花了很大力气才跑通了几条协议可以抓文件。

而且即使通过服务器套入现成代码管理工具，基本也是以文件为单位来进行处理的。
我想针对二维地图增加一点特性。

一个是贴图的局部同步，试想我们的游戏可以让玩家自己编辑地形，编辑完保存，如果整张地形贴图同步，这个流量是非常高的。
如果能局部的进行操作，那就比较好了。可以很从容的undo，redo，不过是在历史版本中游走。

一个是对二维数据的同步，比如怪物分布，地图格子属性这些东西。若以整个配置文件为单位同步，每个版本修改了什么是非常不直观的。
我们打算加入创建、删除、修改的操作记录，当然需要客户端配合提供，这样二维数据的同步也可以用做游戏过程的记录和回放。

当然，传统的文件同步是必须存在的

权限管理肯定要简单的存在

会像svn加入原子操作的设计，一批操作一起同步，要么全成功，要么全失败。

为了避免发生多用户修改冲突，不采用 commit&merge 模型，而是采用lock&unlock模型。
这是visual sourcesafe的经典模型，所以这个项目叫做sourcesafe.light

服务器方面计划用 dotnet 4.0 实现，pure c#实现， 可以在windows 或者用 mono 在 linux 和 macos环境运行。
通讯方面限制于 http get post 方法，restful设计

客户端方面，计划提供unity和winform的例子，sourcesafe.light并不包含客户端，协议设计比较简单，可以用任何http客户端实现。